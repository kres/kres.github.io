<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BBIO-Server | KRES]]></title>
  <link href="http://kres.github.io/blog/categories/bbio-server/atom.xml" rel="self"/>
  <link href="http://kres.github.io/"/>
  <updated>2014-10-22T22:24:52+05:30</updated>
  <id>http://kres.github.io/</id>
  <author>
    <name><![CDATA[Deepak Karki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BBIO-Server Development - 2]]></title>
    <link href="http://kres.github.io/blog/2014/10/22/bbio-server-development-2/"/>
    <updated>2014-10-22T21:54:30+05:30</updated>
    <id>http://kres.github.io/blog/2014/10/22/bbio-server-development-2</id>
    <content type="html"><![CDATA[<p>Currently we have developed the basic RESTful API for the BBIO-Server. The functionality currently supported includes : GPIO, PWM, analog in, Servo and custom modules.</p>

<p>Sample interfaces
```</p>

<p>GPIO handler :</p>

<pre><code>GET /gpio/1/16?task=write&amp;state=HIGH    :: sets pin GPIO1_16 high
GET /gpio/1/16?task=config&amp;mode=INPUT   :: sets pin to input mode
GET     /gpio/1/16?task=read                :: reads pin, returns status
</code></pre>

<p>PWM handler :</p>

<pre><code>pwm to work with default configuration.
i.e. freq = 10KHz and resolution = 8 bit

pin to pwm mapping :-
P8.13 - PWM2B
P8.19 - PWM2A
P9.14 - PWM1A
P9.16 - PWM1B

GET /pwm/1A?value=10
</code></pre>

<p>Analog In :</p>

<pre><code>function to handle ADC read requests. 
Input can be from 0 - 1.8V, o/p of 12 bit resolution

P9.33 - AIN4
P9.35 - AIN6
P9.36 - AIN5
P9.37 - AIN2
P9.38 - AIN3
P9.39 - AIN0

GET /adc/AIN0 =&gt; returns the analog input at channel 0
</code></pre>

<p>Servo controller :</p>

<pre><code>each servo is attached to a PWM module

GET /servo/PWM1A?config=enable  =&gt; enables this module
GET /servo/PWM1A?angle=50   =&gt; moves servo to 50 deg
GET /servo/PWM1A?config=disable =&gt; disables this module
</code></pre>

<p>```</p>

<p>Here is the code that has been currently written :</p>

<script src="https://gist.github.com/deepakkarki/5e767d25dd2fae4a07b8.js"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BBIO-Server Development - 1]]></title>
    <link href="http://kres.github.io/blog/2014/10/04/bbio-server-development-1/"/>
    <updated>2014-10-04T15:48:35+05:30</updated>
    <id>http://kres.github.io/blog/2014/10/04/bbio-server-development-1</id>
    <content type="html"><![CDATA[<p>As we work on BBIO-Server, we will keep the community updated through this blog. The series of posts will discuss the various steps and design decisions taken by us while developing this library.
In this post we will explain how we setup the environment to get started and start using the PyBBIO API.</p>

<h2>Environment Setup</h2>

<ol>
<li>Fork Alexander Hiam&rsquo;s <a href="https://github.com/alexanderhiam/PyBBIO">upstream repository</a> to our <a href="https://github.com/kres/PyBBIO/">master</a>. The master is where we will be adding our library, which is to be upstreamed once complete.</li>
<li>Install the dependencies for PyBBIO as given <a href="https://github.com/alexanderhiam/PyBBIO/wiki/Installing-PyBBIO">here</a> in the official wiki.</li>
<li>Clone our master repository from github, create a BBIO-Server-dev branch.</li>
<li>Install the code from source, by running setup.py, viz present in the root directory of the project.</li>
<li>Install Flask : <code>pip install Flask</code></li>
</ol>


<p>This is how we setup the environment to get started.</p>

<h2>Using PyBBIO</h2>

<p>Deepak has written a nice tutorial on using the PyBBIO API <a href="https://github.com/alexanderhiam/PyBBIO/wiki/Using-PyBBIO">here</a>.</p>

<h2>Official development branch</h2>

<p>The official development tree is <a href="https://github.com/kres/PyBBIO/tree/bbio-server-dev">here</a>. This is where we will be commiting our code.</p>
]]></content>
  </entry>
  
</feed>
