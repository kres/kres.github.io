<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GSoC | My Octopress Blog]]></title>
  <link href="http://deepakkarki.github.io/blog/categories/gsoc/atom.xml" rel="self"/>
  <link href="http://deepakkarki.github.io/"/>
  <updated>2014-09-27T21:40:44+05:30</updated>
  <id>http://deepakkarki.github.io/</id>
  <author>
    <name><![CDATA[Deepak Karki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First Look at PRU Speak API]]></title>
    <link href="http://deepakkarki.github.io/blog/2014/06/14/first-look-at-pru-speak-api/"/>
    <updated>2014-06-14T20:13:42+05:30</updated>
    <id>http://deepakkarki.github.io/blog/2014/06/14/first-look-at-pru-speak-api</id>
    <content type="html"><![CDATA[<p>I managed to get a basic ARM userspace to PRU interaction up and running and even wrote a python API to take care of the interactions.
Here is how the API looks like!</p>

<p>```python
import pru_speak</p>

<p>botspeak_code   = \
&lsquo;&rsquo;&lsquo;     SET DIO[0] , 1</p>

<pre><code>    WAIT 1
    SET DIO[0], 0
    WAIT 1
    GOTO 0'''
</code></pre>

<p>pru_speak.load(botspeak_code)
pru_speak.execute()
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PRU Speak - Project Updates]]></title>
    <link href="http://deepakkarki.github.io/blog/2014/06/02/internals-of-pru-speak/"/>
    <updated>2014-06-02T00:05:57+05:30</updated>
    <id>http://deepakkarki.github.io/blog/2014/06/02/internals-of-pru-speak</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been over two weeks since I started on my <a href="https://github.com/deepakkarki/pruspeak">GSoC project</a>, and what a journey it&rsquo;s been! Reading thousands of lines of kernel code, prototyping my own drivers and involved discussions with the community members :D</p>

<p>Here is the update :</p>

<ul>
<li>Tried out character drivers</li>
<li>Developed my own sysfs driver with support for both binary and device files.</li>
<li>Hacked on my mentors driver.</li>
<li>Got upcalls and down calls working.</li>
<li>Developed some C + Assembly based firmware for the PRU</li>
<li>Shared memory implementation between the kernel and PRU.</li>
<li>currently working on exporting the shared memory to userspace.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The PRU Speak Project]]></title>
    <link href="http://deepakkarki.github.io/blog/2014/05/17/the-pru-speak-project/"/>
    <updated>2014-05-17T22:54:41+05:30</updated>
    <id>http://deepakkarki.github.io/blog/2014/05/17/the-pru-speak-project</id>
    <content type="html"><![CDATA[<p>I received some really good news earlier this month! I had been selected for <a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2014">GSoC 2014</a>!</p>

<p><img class="center" src="/images/the-pru-speak-project/GSoC-2014.jpg" title="GSoC-2014" ></p>

<p>The project I will be working on the <a href="https://github.com/deepakkarki/pruspeak">PRU Speak</a> project for <a href="http://www.beagleboard.org/">Beagleboard</a> this summer :D
The summary of all the projects that have been selected for GSoC-2014 @ Beagleboard is put up at the official <a href="http://elinux.org/BeagleBoard/GSoC/2014_Projects">projects page</a></p>

<p><img class="center" src="/images/the-pru-speak-project/BBB-logo.jpg" title="Beaglebone black logo" ></p>

<p>The key motivation behind my project is to make simple the control of the PRU from an userspace process in Linux running on ARM. This is done by developing a custom firmware for the PRU and an API frontend for the user space application to use. A kernel driver forms the bridge between the user spcae library and the PRU firmware, (i.e.) API &lt;&mdash;> Driver &lt;&mdash;> firmware on PRU.</p>

<p><img class="center" src="/images/the-pru-speak-project/beagleboneblack.png" title="Beaglebone black" ></p>

<p>Here is a small video I wipped up for the organisation that summarizes my project!</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/8g8e4AgDqNo " height="380" width="680"></iframe></div>



]]></content>
  </entry>
  
</feed>
